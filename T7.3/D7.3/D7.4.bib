@book{ajitha_rajan_cesar_2013,
	title = {{CESAR} - Cost-efficient Methods and Processes for Safety-relevant Embedded Systems},
	isbn = {978-3-7091-1386-8},
	url = {http://www.springer.com/engineering/production+engineering/book/978-3-7091-1386-8},
	abstract = {The book summarizes the findings and contributions of the European {ARTEMIS} project, {CESAR}, for improving and enabling interoperability of methods, tools, and processes to meet the demands in embedded systems development across four ...},
	urldate = {2013-04-26},
	publisher = {Springer Vienna},
	editor = {{Ajitha Rajan} and {Thomas Wahl}},
	year = {2013},
	keywords = {{CESAR} - Cost-efficient Methods and Processes for Safety-relevant Embedded Systems, Industrial and Production Engineering, Mechanical Engineering},
	file = {Snapshot:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/VC2943E6/978-3-7091-1386-8.html:text/html}
}
@article{vara_framework_2012,
	title = {A framework for model-driven development of information systems: Technical decisions and lessons learned},
	volume = {85},
	issn = {01641212},
	url = {http://dx.doi.org/10.1016/j.jss.2012.04.080 http://linkinghub.elsevier.com/retrieve/pii/S0164121212001367},
	doi = {10.1016/j.jss.2012.04.080},
	abstract = {In recent years, the impact of the model-driven engineering ({MDE)} paradigm has resulted in the advent of a number of model-based methodological proposals that leverage the use of models at any stage of the development cycle. Apart from promoting the role of models, {MDE} is notable for leveraging the level of automation along the development process. For this to be achieved there is a need of supporting frameworks, tools or environments. This way, while accompanying any methodological proposal of the corresponding technical support has been traditionally recognized as a good practice, it becomes a mandatory requirement in {MDE} contexts. To address this task, this work presents in a systematic and reasoned way the set of methodological and technical decisions that drove the specification of {M2DAT}, a technical solution for model-driven development of Information Systems and its reference implementation: {M2DAT-DB}, a {DSL} toolkit for model-driven development of modern {DB} schemas. The objective of this work is to put forward the conclusions and decisions derived from the experience of the authors when designing and building such framework. As a result, this work will help not only {MDE} practitioners, but also {SE} practitioners wishing to bring the advantages of {MDE} to their fields of interest.},
	number = {10},
	journal = {Journal of Systems and Software},
	author = {Vara, Juan Manuel and Marcos, Esperanza},
	month = oct,
	year = {2012},
	keywords = {domain-specific modeling, model-driven engineering, software development frameworks, Tool Integration},
	pages = {2368–2384},
	annote = {Section 3 :
- Argumentation between {DSL} and {UML} with Profile.
- Discussion on framework btw : {EMF}, {SPOOFAX} {ATOM3}},
	file = {Attachment:/home/cecile/biblio/storage/Q3JFJIN7/Vara, Marcos - 2012 - A framework for model-driven development of information systems Technical decisions and lessons learned.pdf:application/pdf}
}

@inproceedings{sriplakich_collaborative_2008,
	address = {New York, New York, {USA}},
	title = {Collaborative software engineering on large-scale models},
	isbn = {9781595937537},
	url = {http://dl.acm.org/citation.cfm?id=1363686.1363849},
	doi = {10.1145/1363686.1363849},
	booktitle = {Proceedings of the 2008 {ACM} symposium on Applied computing - {SAC} '08},
	publisher = {{ACM} Press},
	author = {Sriplakich, Prawee and Blanc, Xavier and Gervals, Marie-Pierre},
	month = mar,
	year = {2008},
	keywords = {Tool Integration},
	pages = {674},
	file = {Attachment:/home/cecile/biblio/storage/C4QNF3GB/Sriplakich, Blanc, Gervals - 2008 - Collaborative software engineering on large-scale models.pdf:application/pdf}
}

@inproceedings{biehl_constructing_2012,
	title = {Constructing Tool Chains Based on {SPEM} Process Models},
	url = {http://www.thinkmind.org/index.php?view=article&articleid=icsea_2012_10_10_10094},
	booktitle = {The Seventh International Conference on Software Engineering Advances (ICSEA2012)},
	author = {Biehl, Matthias and Törngren, M},
	year = {2012},
	keywords = {embedded systems, generative approach, model-driven development, process modeling, Tool Integration},
	pages = {267–273},
	file = {Attachment:/home/cecile/biblio/storage/6MHRZJ54/Biehl, Törngren - 2012 - Constructing Tool Chains Based on SPEM Process Models.pdf:application/pdf}
},

@article{biehl_early_2012,
	title = {Early automated verification of tool chain design},
	url = {http://www.springerlink.com/index/0354288NR1897364.pdf},
	journal = {Computational Science and Its {Applications–ICCSA} {\textbackslash}ldots},
	author = {Biehl, Matthias},
	year = {2012},
	keywords = {model-driven development, process modeling, Tool chain, Tool Integration, verification},
	pages = {40–50},
	file = {Attachment:/home/cecile/biblio/storage/423747SB/Biehl - 2012 - Early automated verification of tool chain design.pdf:application/pdf}
},

@article{armengaud_integrated_2012,
	title = {Integrated tool-chain for improving traceability during the development of automotive systems},
	url = {http://www.erts2012.org/Site/0P2RUC89/5A-3.pdf},
	abstract = {Tool integration is a key factor for improving development efficiency and product quality during the development of safety-relevant embedded systems. We present in this work a demonstrator based on the most recent outcomes of the {CESAR} project. The proposed integrated tool-chain aims at better linking development activities together, thus improving traceability during requirements engineering, system design, safety analysis and {V\&V} activities using a model-based development approach. We analyze the proposed tool-chain from three different points of view: (1) tool integrator, (2) technology provider, and (3) end-user. These different points of view enable the description of the different technologies used at the different levels and the analysis of the benefits for the end-user},
	journal = {{ERTS2} 2012 Embedded Real Time Software and Systems},
	author = {Armengaud, Eric and Biehl, Matthias and Bourrouilh, Quentin and Breunig, Michael and Farfelder, Stephan and Hein, Christian and Oertel, Markus and Wallner, Alfred and Zoier, Markus},
	year = {2012},
	keywords = {{CESAR}, functional safety, {ISO} 26262, Tool chain, tool-chains, Tool Integration},
	file = {Attachment:/home/cecile/biblio/storage/6QP9K6BR/Armengaud, Biehl - 2012 - Integrated tool-chain for improving traceability during the development of automotive systems.pdf:application/pdf}
},

@phdthesis{juan_manuel_vara_mesa_m2dat:_2009,
	address = {Madrid, Spain},
	title = {{M2DAT:} a Technical Solution for Model-Driven Development of Web Information Systems},
	url = {http://www.kybele.etsii.urjc.es/members/jmvara/Thesis/},
	abstract = {During the last 20 years, there has been a continuous tendency towards raising the level of abstraction at which software is designed and developed. This way, assembly languages gave way to structured programming that yielded to object-orientation and so on. The last step in this line has been the Model-Driven Engineering ({MDE)} paradigm,that promotes the use of models as primary actors in the software development.

The underlying idea is to capture the system requirements and specification in high-level abstraction models that are automatically refined into low-level abstraction models. The latter takes into account the details of the targetting platforms and could be shown as the plans for the working-code. Indeed, such models are directly serialized into the working-code that implements the system. This way, automation comes as the other key of {MDE:} there is a need of tools for defining models, connecting them by means of model transformations, serializing them into code, etc.

The impact of the {MDE} paradigm has resulted in the advent of a number of methodological proposals for Model-Driven Software Development ({MDSD).} According to the {MDE} principles, the authors of such proposals have developed the corresponding tools that should provide with the technical support for them. However, the absence of standards and their closed nature have resulted in tools providing with ad-hoc solutions that do not make the most of {IDM's} advantages in the form of less costly, rapid software development.

In this context, this thesis addresses the specification of {M2DAT} ({MIDAS} {MDA} Tool), a framework for semi-automatic model-driven development of Web Information Systems. To that end, instead of developing the technical support for each task comprised in a {MDSD} proposal, {M2DAT} integrates the isolated functionality provided by a set of existing tools for {MDE} tasks that will be used as building blocks.

This way, as part of this thesis we will define a conceptual architecture for {MDSD} frameworks. It will be an extensible, modular and dynamic architecture that promotes the integration of new capabilities in the form of new modules or subsystems and supports introducing desing decisions to drive the embedded model transformations. As well, since the proposed environtment follows a modular architecture, the development process to follow in order to build and integrate new modules will be defined.

Likewise, a set of methodological and technological decisions will be reasoned and justified to map the conceptual architecture to a technical design. Finally, in order to prove the feasibility of the proposal and to show that it can be used in practice and how it should be done, a reference implementation will be provided. In particular, one of the modules of {M2DAT}, that supports the model-driven development of modern Database schemas will be developed.

In summary, {M2DAT} aims at solving some drawbacks detected in existing tools for supporting {MDSD} methodologies, mainly due to their isolated and closed nature: in contrast with previous works in the field, {M2DAT} will be easily extensible to ease the task of responding to new advances in the field. Likewise, it will be highly interoperable to simplify the use of the functionality provided by any other tool with {M2DAT's} models. Finally, special attention will be paid to the management of model transformations in {M2DAT}, since they are the cornerstone of any {MDSD} methodological proposal.},
	school = {University Rey Juan Carlos},
	author = {{Juan Manuel Vara Mesa}},
	year = {2009},
	keywords = {Model-based Development, model-driven development, Tool Integration}
},

@article{armengaud_model-based_2011,
	title = {Model-based Toolchain for the efficient development of safety-relevant automotive embedded systems},
	url = {http://papers.sae.org/2011-01-0056},
	doi = {10.4271/2011-01-0056},
	journal = {{SAE} 2011 World Congress \& Exhibition},
	author = {Armengaud, Eric and Zoier, Markus and Baumgart, Andreas and Biehl, Matthias and Chen, {DeJiu} and Griessnig, Gerhard and Hein, Christian and Ritter, Tom and Kolagari, Ramin Tavakoli},
	year = {2011},
	keywords = {Automative, {CESAR}, Tool chain, tool-chains, Tool Integration},
	file = {Attachment:/home/cecile/biblio/storage/K94S54XX/Armengaud, Zoier - 2011 - Model-based Toolchain for the efficient development of safety-relevant automotive embedded systems.pdf:application/pdf}
},

@article{blanc_model_2005,
	title = {Model bus: Towards the interoperability of modelling tools},
	volume = {6},
	url = {http://www.springerlink.com/index/1w72vkauuw6117hl.pdf},
	journal = {Model Driven Architecture},
	author = {Blanc, Xavier and Gervais, {MP} and Sriplakich, Prawee},
	year = {2005},
	keywords = {{ModelBus}, model-driven engineering, to, Tool Integration},
	pages = {17–32},
	file = {Attachment:/home/cecile/biblio/storage/FKHXF7AQ/Blanc, Gervais, Sriplakich - 2005 - Model bus Towards the interoperability of modelling tools.1007_11538097_2:application/pdf}
},

@article{hein_model-driven_2009,
	title = {Model-driven tool integration with {ModelBus}},
	url = {http://www.modelbus.org/modelbus/images/stories/docs/toolint_with_modelbus.pdf},
	abstract = {{ModelBus} is a tool integration technology which is built upon Web Services and follows a {SOA} approach. M {odelBus} facilitates the orchestration of modeling services which represent par ticular functionality of tools acting on models. This demonstration paper summa rizes the key concepts of the Model- Bus technology and presents an outline of a scenario where {ModelBus} has been applied in an industrial context.},
	journal = {Workshop Future Trends of Model-Driven {\textbackslash}ldots},
	author = {Hein, Christian and Ritter, Tom and Wagner, Michael},
	year = {2009},
	keywords = {{CESAR}, {ModelBus}, model-driven development, Tool Integration},
	file = {Attachment:/home/cecile/biblio/storage/8U3JC7PS/Hein, Ritter, Wagner - 2009 - Model-driven tool integration with ModelBus.pdf:application/pdf}
},

@article{biehl_modeling_2012,
	title = {On the modeling and generation of service-oriented tool chains},
	issn = {1619-1366},
	url = {http://www.springerlink.com/index/10.1007/s10270-012-0275-7},
	doi = {10.1007/s10270-012-0275-7},
	journal = {Software \& Systems Modeling},
	author = {Biehl, Matthias and El-Khoury, Jad and Loiret, Frédéric and Törngren, Martin},
	month = sep,
	year = {2012},
	keywords = {Tool chain, Tool Integration}
},

@article{asplund_qualifying_2012,
	title = {Qualifying Software Tools, a Systems Approach},
	url = {http://www.springerlink.com/index/J2125Q2M65P8L6N6.pdf},
	journal = {Computer Safety, Reliability, and {\textbackslash}ldots},
	author = {Asplund, Fredrik and El-khoury, Jad and Törngren, Martin},
	year = {2012},
	keywords = {certification, safety, Tool Integration},
	pages = {340–351},
	file = {Attachment:/home/cecile/biblio/storage/UR3EXZ4F/Asplund, El-khoury, Törngren - 2012 - Qualifying Software Tools, a Systems Approach.pdf:application/pdf}
},

@incollection{asplund_tool_2011,
	series = {Lecture Notes in Business Information Processing},
	title = {Tool Integration beyond Wasserman},
	copyright = {©2011 Springer-Verlag {GmbH} Berlin Heidelberg},
	isbn = {978-3-642-22055-5, 978-3-642-22056-2},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-22056-2_29},
	abstract = {The typical development environment today consists of many specialized development tools, which are partially integrated, forming a complex tool landscape with partial integration. Traditional approaches for reasoning about tool integration are insufficient to measure the degree of integration and integration optimality in today’s complex tool landscape. This paper presents a reference model that introduces dependencies between, and metrics for, integration aspects to overcome this problem. This model is used to conceive a method for reasoning about tool integration and identify improvements in an industrial case study. Based on this we are able to conclude that our reference model does not detract value from the principles that it is based on, instead it highlights improvements that were not well visible earlier. We conclude the paper by discussing open issues for our reference model, namely if it is suitable to use during the creation of new systems, if the used integration aspects can be subdivided further to support the analysis of secondary issues related to integration, difficulties related to the state dependency between the data and process aspects within the context of developing embedded systems and the analysis of non-functional requirements to support tool integration.},
	number = {83},
	urldate = {2013-03-27},
	booktitle = {Advanced Information Systems Engineering Workshops},
	publisher = {Springer Berlin Heidelberg},
	author = {Asplund, Fredrik and Biehl, Matthias and El-Khoury, Jad and Törngren, Martin},
	editor = {Salinesi, Camille and Pastor, Oscar},
	month = jan,
	year = {2011},
	keywords = {Artificial Intelligence (incl. Robotics), Business Information Systems, Computer Appl. in Administrative Data Processing, Information Systems Applications ({incl.Internet)}, Integrated Development Environments, Model-based Development, Model-based Tool Integration, Software Engineering, Tool Integration},
	pages = {270--281},
	file = {Full Text PDF:/home/cecile/biblio/storage/SSQGH6Z5/Asplund et al. - 2011 - Tool Integration beyond Wasserman.pdf:application/pdf;Snapshot:/home/cecile/biblio/storage/2XDMBA4R/978-3-642-22056-2_29.html:text/html}
},

@incollection{wasserman_tool_1990,
	series = {Lecture Notes in Computer Science},
	title = {Tool integration in software engineering environments},
	volume = {467},
	isbn = {978-3-540-53452-5},
	url = {http://www.springerlink.com/index/p582q2n825k87nl5.pdf http://dx.doi.org/10.1007/3-540-53452-0_38},
	abstract = {A key issue in current computer-aided software engineering ({CASE)} environ- ments is the desire to link tools that address different aspects of the develop- ment process. Typically, these tools are produced by different vendors, each of whom has chosen to focus on a specific part of the overall problem. For example, different tools support architectural design and test case generation. Users of these tools want them to work together to fully support the user's design and development process. Thus, tool integration is intended to produce complete environments that support the entire software development life cycle. There are five types of tool integration issues that must be addressed. These can be termed platform integration, presentation integration, data integration, control integration, and process integration. Each of these is briefly described, followed by a short discussion of the contribution of open architecture to tool integration. The paper concludes with an overview of the integration techniques employed in {IDE's} Software through Pictures 1 environment. Emphasis is given to commercially available products and approaches, reflecting the need of large- scale software developers for these integrated software engineering environments.},
	booktitle = {Software Engineering Environments},
	publisher = {Springer Berlin Heidelberg},
	author = {Wasserman, {AnthonyI.}},
	editor = {Long, Fred},
	year = {1990},
	keywords = {{CASE}, Tool Integration},
	pages = {137–149},
	file = {Attachment:/home/cecile/biblio/storage/HX6WFH7E/Wasserman - 1990 - Tool integration in software engineering environments.pdf:application/pdf}
}

@article{slotosch_model-based_2012,
	title = {Model-Based Tool Qualification : The roadmap of eclipse towards tool Qualification},
	url = {http://wiki.eclipse.org/images/7/75/ModelBasedToolQuali.pdf},
	urldate = {2013-04-16},
	author = {Slotosch, Oscar},
	year = {2012},
        journal={Springer},  
	file = {ModelBasedToolQuali.pdf:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/MKHR6RE6/ModelBasedToolQuali.pdf:application/pdf}
},

@article{slotosch_iso_2012,
	title = {{ISO} 26262-Tool Chain Analysis Reduces Tool Qualification Costs},
	url = {http://www4.in.tum.de/~philippj/pub/automotive2012.pdf},
	urldate = {2013-04-16},
	author = {Slotosch, Oscar and Wildmoser, Martin and Philipps, Jan and Jeschull, Reinhard and Zalman, Rafael},
	year = {2012},
        journal={Automotive 2012},
	file = {automotive2012.pdf:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/QI72CN64/automotive2012.pdf:application/pdf}
},

@inproceedings{wildmoser_determining_2012,
	address = {Berlin, Heidelberg},
	series = {{SAFECOMP'12}},
	title = {Determining potential errors in tool chains: strategies to reach tool confidence according to {ISO} 26262},
	isbn = {978-3-642-33677-5},
	shorttitle = {Determining potential errors in tool chains},
	url = {http://dx.doi.org/10.1007/978-3-642-33678-2_27},
	doi = {10.1007/978-3-642-33678-2_27},
	abstract = {Due to failures of software tools faults compromising the safety of the developed items may either be injected or not detected. Thus the safety norm for road vehicles, {ISO} 26262, requires to evaluate all software tools by identifying potential tool failures and measures to detect or avoid them. The result is a tool confidence level for each tool, which determines if and how a tool needs to be qualified. This paper focuses on tool failure identification and proposes two strategies for this task. The function-based strategy derives potential tool failures from a functional decomposition of the tool. The artifact-based strategy analyzes artifacts only. We introduce an analysis tool to support these strategies and discuss their ability to produce lists of failures that are comprehensive, uniform and adequately abstract. This discussion is based on our experience with these strategies in a large scale industrial project.},
	urldate = {2013-04-16},
	booktitle = {Proceedings of the 31st international conference on Computer Safety, Reliability, and Security},
	publisher = {Springer-Verlag},
	author = {Wildmoser, Martin and Philipps, Jan and Slotosch, Oscar},
	year = {2012},
	keywords = {{HAZOP}, {ISO} 26262, potential tool error, potential tool failure, tool chain analysis, tool qualification},
	pages = {317–327},
	file = {SC2012_DeterminingPotentialErrorsInToolChains.pdf:/home/cecile/BIBLIO/SC2012_DeterminingPotentialErrorsInToolChains.pdf:application/pdf}
}
@incollection{asplund_towards_2012,
	series = {Lecture Notes in Computer Science},
	title = {Towards the automated qualification of tool chain design},
	volume = {7613},
	isbn = {978-3-642-33674-4},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-33675-1_36},
	urldate = {2013-04-23},
	booktitle = {Computer Safety, Reliability, and Security},
	publisher = {Springer},
	author = {Asplund, Fredrik and Biehl, Matthias and Loiret, Frédéric},
	year = {2012},
	keywords = {safety, Tool Integration, Tool qualification},
	pages = {392–399},
	file = {Towards the Automated Qualification of Tool Chain Design.pdf:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/QWGQ5DK8/Towards the Automated Qualification of Tool Chain Design.pdf:application/pdf}
}
@inproceedings{biehl_matthias_domain_2011,
	title = {A Domain Specific Language for Generating Tool Integration Solutions},
	url = {http://www1.md.kth.se/~biehl/files/papers/mdtpi2011.pdf},
	abstract = {Model-based development of complex systems requires toolsupport for the dierent phases of the system life cycle. To allow for anecient development process, the involved tools need to be {integrated.Despite} the availability of modern tool integration platforms and frameworks,it is complex, labor-intensive and costly to build tool integrationsolutions. For managing the growing complexity of tool integration solutions,a need for systematic engineering arises. A missing piece is thehigh-level architectural description of tool integration solutions. We proposethe domain specic language {TIL} for describing tool integrationsolutions at a high level of abstraction. We propose an approach thattakes advantage of modeling technologies to systematize and automatethe process of building tool integration solutions. By automatically generatingintegration solutions from a {TIL} model, we can reduce the manualimplementation eort.},
	urldate = {2013-04-24},
	author = {{Biehl, Matthias} and {El-Khoury, Jad} and {Loiret, Frédéric} and {Törngren, Martin}},
	year = {2011},
        booktitle={In 4th Workshop on Model-Driven Tool \& Process Integration},
	keywords = {code generation, {DSL}, Model-based Development, Tool Integration},
	file = {mdtpi2011.pdf:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/GXBPIBAA/mdtpi2011.pdf:application/pdf}
}

@incollection{cesar_interope2013,
year={2013},
isbn={978-3-7091-1386-8},
booktitle={CESAR - Cost-efficient Methods and Processes for Safety-relevant Embedded Systems},
editor={Rajan, Ajitha and Wahl, Thomas},
doi={10.1007/978-3-7091-1387-5_8},
title={Interoperability},
url={http://dx.doi.org/10.1007/978-3-7091-1387-5_8},
publisher={Springer Vienna},
author={Vasaiely, Parham and Ersch, Rainer and Hein, Christian and Keis, Andreas and Paganelli, Fabien and Stieglbauer, Gerald and Viglietti, Ivo},
pages={263-293},
language={English}
}


@techreport{huang_test_2013,
	type = {Delivrable},
	title = {Test Automation Support},
	copyright = {Public document},
	url = {http://www.compass-research.eu/Project/Deliverables/D341.pdf},
	abstract = {This technical report describes the testing methodology provided for testing
systems of systems modelled with {SysML/CML.} An introductory part explains
the current state of the art and the challenges in {SoS} testing and indicates
focus points of future work. Some of these challenges will be solved within
the {COMPASS} project, as explained in the following parts of this document
and in deliverable D34.2. The {COMPASS} testing methodology is based on
the model-based testing paradigm, accepting {SysML/CML} test models as
input. It is explained how the models are transformed into an abstract syntax
tree internal to {RT-Tester.} Test cases are automatically identified by parsing
the {AST}, and requirements tracing is performed by exploiting the relations
between requirements and model elements that can be specified in {SysML}
models. Transition relations are generated from an operational interpretation
of (a subset of) {SysML/CML} models; they are used to calculate concrete
test data, using constraint solving techniques for reachability goals similar to
bounded model checking. The integration of {RT-Tester} into the {COMPASS}
tool platform and protocols supporting this objective are specified. A generic
concept for tool qualification is elaborated which conforms to {ISO26262},
{RTCA} {DO-178C} and {CENELEC} {EN} 50128-2011. This allows for applying
the testing methodology and its supporting tool platform in a safety-critical
{SoS} context},
	number = {D34.1},
	urldate = {2013-09-02},
	institution = {{COMPASS}},
	author = {Huang, Wen-Ling and Peleska, Jan and Schulze, Uwe},
	month = jan,
	year = {2013},
	keywords = {model-based testing, Tool qualification},
	pages = {1--209},
	file = {D341.pdf:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/ZB97D4XA/D341.pdf:application/pdf}
}


@book{standard_railway_2011,
	series = {{CENELEC} {EN} 50128},
	title = {Railway applications-Communication,signalling and processing system- Software for railway control and protecton system},
	publisher = {{DIN}},
	author = {Standard, European},
	month = oct,
	year = {2011},
	keywords = {{CENELEC}, Standard},
	file = {Attachment:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/ICBNUW3M/European Standard - 2011 - En 50128.pdf:application/pdf}
}


@techreport{baro_d2.6_2013,
	title = {D2.6 Requirements for {openETCS}},
	rights = {{CC}-by-{SA}},
	pages = {1--23},
	number = {D2.6},
	institution = {{openETCS}},
	type = {Requirements},
	author = {Baro, Sylvain and Welte, Jan},
	date = {2013-04},
	year = {2013},
	note = {Cited by 0000},
	keywords = {{OpenETCS}}
}
@techreport{pokam_report_2013,
	type = {Requirements},
	title = {Report on {CENELEC} standards},
	copyright = {{CC-by-SA}},
	number = {D2.2},
	institution = {{openETCS}},
	author = {Pokam, Merlin and Schäfer, Norbert},
	month = apr,
	year = {2013},
	keywords = {{OpenETCS}, {WP2}},
	pages = {1--52}
}

@incollection{nielsen_efficient_2012,
	series = {Lecture Notes in Computer Science},
	title = {Efficient and Trustworthy Tool Qualification for Model-Based Testing Tools},
	volume = {7641},
	isbn = {978-3-642-34690-3},
	url = {http://dx.doi.org/10.1007/978-3-642-34691-0_3},
	booktitle = {Testing Software and Systems},
	publisher = {Springer Berlin Heidelberg},
	author = {Brauer, Jörg and Peleska, Jan and Schulze, Uwe},
	editor = {Nielsen, Brian and Weise, Carsten},
	year = {2012},
	keywords = {certification, D3.1, model-based testing},
	pages = {8--23},
	file = {Attachment:/home/cecile/.mozilla/firefox/hzvu1rr0.default/zotero/storage/G6C89NDN/Brauer, Peleska, Schulze - 2012 - Efficient and Trustworthy Tool Qualification for Model-Based Testing Tools.pdf:application/pdf}
}